{"ast":null,"code":"var _jsxFileName = \"/Users/JJY/Desktop/react/dev/week-2/src/App.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StContainer = styled.StContainer`\n\t{display: flex(box) => (\n\n\t);}\n`;\n_c = StContainer;\nconst StBox = styled.StContainer`\n\t{width: 100px(box) => (\n\n\t);}\n\theight: 100px;\n\tborder: 1px solid ${props => props.borderColor};\n\tmargin: 20px;\n`;\n_c2 = StBox;\n\nfunction App() {\n  // 박스의 색을 배열에 담습니다.\n  const boxList = ['red', 'green', 'blue']; // 색을 넣으면, 이름을 반환해주는 함수를 만든다.\n\n  const getBoxName = color => {\n    switch (color) {\n      case 'red':\n        return \"빨간 박스\";\n\n      case 'green':\n        return \"초록 박스\";\n\n      case 'blue':\n        return \"파란 박스\";\n\n      default:\n        return \"검정 박스\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StContainer, {\n    children: boxList.map(box => /*#__PURE__*/_jsxDEV(StBox, {\n      borderColor: box,\n      children: getBoxName(box)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StContainer\");\n$RefreshReg$(_c2, \"StBox\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","styled","StContainer","StBox","props","borderColor","App","boxList","getBoxName","color","map","box"],"sources":["/Users/JJY/Desktop/react/dev/week-2/src/App.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\"\n\nconst StContainer = styled.StContainer`\n\t{display: flex(box) => (\n\n\t);}\n`\nconst StBox = styled.StContainer`\n\t{width: 100px(box) => (\n\n\t);}\n\theight: 100px;\n\tborder: 1px solid ${(props)=>props.borderColor};\n\tmargin: 20px;\n`\n\nfunction App() {\n\t// 박스의 색을 배열에 담습니다.\n\tconst boxList = ['red','green','blue']\n\n\t// 색을 넣으면, 이름을 반환해주는 함수를 만든다.\n\tconst getBoxName = (color) => {\n\t\tswitch (color) {\n\t\t\tcase 'red':\n\t\t\t\treturn \"빨간 박스\"\n\t\t\tcase 'green':\n\t\t\t\treturn \"초록 박스\"\n\t\t\tcase 'blue':\n\t\t\t\treturn \"파란 박스\"\n\t\t\tdefault:\n\t\t\t\treturn \"검정 박스\"\n\t\t}\n\t}\n\treturn (\n\t\t<StContainer>\n\t\t\t{boxList.map((box) => (\n\t\t\t\t<StBox borderColor={box}>{getBoxName(box)}</StBox>\n\t\t\t))}\n\t\t</StContainer>\n\t)\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACC,WAAY;AACvC;AACA;AACA;AACA,CAJA;KAAMA,W;AAKN,MAAMC,KAAK,GAAGF,MAAM,CAACC,WAAY;AACjC;AACA;AACA;AACA;AACA,qBAAsBE,KAAD,IAASA,KAAK,CAACC,WAAY;AAChD;AACA,CAPA;MAAMF,K;;AASN,SAASG,GAAT,GAAe;EACd;EACA,MAAMC,OAAO,GAAG,CAAC,KAAD,EAAO,OAAP,EAAe,MAAf,CAAhB,CAFc,CAId;;EACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;IAC7B,QAAQA,KAAR;MACC,KAAK,KAAL;QACC,OAAO,OAAP;;MACD,KAAK,OAAL;QACC,OAAO,OAAP;;MACD,KAAK,MAAL;QACC,OAAO,OAAP;;MACD;QACC,OAAO,OAAP;IARF;EAUA,CAXD;;EAYA,oBACC,QAAC,WAAD;IAAA,UACEF,OAAO,CAACG,GAAR,CAAaC,GAAD,iBACZ,QAAC,KAAD;MAAO,WAAW,EAAEA,GAApB;MAAA,UAA0BH,UAAU,CAACG,GAAD;IAApC;MAAA;MAAA;MAAA;IAAA,QADA;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AAOA;;MAxBQL,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}