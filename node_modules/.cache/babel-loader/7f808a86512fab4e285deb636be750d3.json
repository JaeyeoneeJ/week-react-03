{"ast":null,"code":"// Action Value\nconst SUBMIT_TODO = \"SUBMIT_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst EDIT_TODO = \"EDIT_TODO\";\nconst RESET_TODO = \"RESET_TODO\"; // Action Creator\n\nexport const submitTodo = payload => {\n  return {\n    type: SUBMIT_TODO,\n    payload\n  };\n};\nexport const deleteTodo = payload => {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n};\nexport const editTodo = payload => {\n  return {\n    type: EDIT_TODO,\n    payload\n  };\n};\nexport const resetTodo = payload => {\n  return {\n    type: RESET_TODO,\n    payload\n  };\n}; // Initial State\n\nconst InitialState = {\n  todos: [{\n    id: 1,\n    title: \"[완료 기능 리스트]\",\n    content: `모바일 최적화: 미디어쿼리 활용(max-width 880px, 500px), iPhone 테스트 완료 &nbsp\n            state 저장: redux-persist 활용, Local Storage 내 todos State 저장 및 RESET(InitialState 초기값 복원) 기능 구현\n            `,\n    isDone: true\n  }, {\n    id: 2,\n    title: \"[완료] - state 저장\",\n    content: \"redux-persist 활용, Local Storage 내 todos State 저장 및 RESET(InitialState 초기값 복원) 기능 구현\",\n    isDone: true\n  }, {\n    id: 3,\n    title: \"수정 기능 구현\",\n    content: \"수정 버튼 클릭 시, div 태그를 input 태그로 변환 후 내용 수정 및 수정완료 버튼 클릭 시, submit\",\n    isDone: false\n  }]\n}; // Reducer\n\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 하고자 하는 액션 이름\n    case SUBMIT_TODO:\n      // todo를 제출해서 todos에 합쳐줘!\n      return {\n        // 실행할 함수 결과\n        // ...state,  // => 현재 initialState 안에 todos key 하나만 있어서 굳이 전개할 필요가 없음\n        todos: [...state.todos, action.payload]\n      };\n\n    case DELETE_TODO:\n      return {\n        // ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n\n    case EDIT_TODO:\n      return {\n        // ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.payload) {\n            return { ...todo,\n              isDone: !todo.isDone\n            };\n          } else {\n            return todo;\n          }\n        })\n      };\n\n    case RESET_TODO:\n      console.log(\"The state of 'todos' has been reset.\");\n      return InitialState;\n\n    default:\n      return state;\n  }\n}; // 모듈파일에는 리듀서를 export default 한다.\n\n\nexport default todos;","map":{"version":3,"names":["SUBMIT_TODO","DELETE_TODO","EDIT_TODO","RESET_TODO","submitTodo","payload","type","deleteTodo","editTodo","resetTodo","InitialState","todos","id","title","content","isDone","state","action","filter","todo","map","console","log"],"sources":["/Users/JJY/Desktop/react/dev/week-2/src/redux/modules/todos.js"],"sourcesContent":["// Action Value\nconst SUBMIT_TODO = \"SUBMIT_TODO\"\nconst DELETE_TODO = \"DELETE_TODO\"\nconst EDIT_TODO = \"EDIT_TODO\"\nconst RESET_TODO = \"RESET_TODO\"\n\n// Action Creator\nexport const submitTodo = (payload) => {\n    return {\n        type: SUBMIT_TODO,\n        payload,\n    }\n}\nexport const deleteTodo = (payload) => {\n    return {\n        type: DELETE_TODO,\n        payload,\n    }\n}\nexport const editTodo = (payload) => {\n    return {\n        type: EDIT_TODO,\n        payload,\n    }\n}\nexport const resetTodo = (payload) => {\n    return {\n        type: RESET_TODO,\n        payload,\n    }\n}\n\n\n// Initial State\nconst InitialState = {\n    todos: [\n        {\n            id: 1,\n            title: \"[완료 기능 리스트]\",\n            content: `모바일 최적화: 미디어쿼리 활용(max-width 880px, 500px), iPhone 테스트 완료 &nbsp\n            state 저장: redux-persist 활용, Local Storage 내 todos State 저장 및 RESET(InitialState 초기값 복원) 기능 구현\n            `,\n            isDone: true,\n        },\n        {\n            id: 2,\n            title: \"[완료] - state 저장\",\n            content: \"redux-persist 활용, Local Storage 내 todos State 저장 및 RESET(InitialState 초기값 복원) 기능 구현\",\n            isDone: true,\n        },\n        {\n            id: 3,\n            title: \"수정 기능 구현\",\n            content: \"수정 버튼 클릭 시, div 태그를 input 태그로 변환 후 내용 수정 및 수정완료 버튼 클릭 시, submit\",\n            isDone: false,\n        },\n    ]\n}\n\n// Reducer\nconst todos = (state = InitialState, action) => {\n    switch (action.type) {\n        // 하고자 하는 액션 이름\n        case SUBMIT_TODO:  // todo를 제출해서 todos에 합쳐줘!\n            return {\n                // 실행할 함수 결과\n                // ...state,  // => 현재 initialState 안에 todos key 하나만 있어서 굳이 전개할 필요가 없음\n                todos: [...state.todos, action.payload]\n            }\n        case DELETE_TODO:\n            return {\n                // ...state,\n                todos: state.todos.filter((todo) => (todo.id !== action.payload))\n            }\n        case EDIT_TODO:\n            return {\n                // ...state,\n                todos: state.todos.map((todo) => {\n                    if (todo.id === action.payload) {\n                        return {\n                            ...todo, isDone: !todo.isDone\n                        }\n                    } else {\n                        return todo\n                    }\n                })\n            }\n        case RESET_TODO:\n            console.log(\"The state of 'todos' has been reset.\")\n            return InitialState\n        default:\n            return state\n    }\n}\n\n// 모듈파일에는 리듀서를 export default 한다.\nexport default todos"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa;EACnC,OAAO;IACHC,IAAI,EAAEN,WADH;IAEHK;EAFG,CAAP;AAIH,CALM;AAMP,OAAO,MAAME,UAAU,GAAIF,OAAD,IAAa;EACnC,OAAO;IACHC,IAAI,EAAEL,WADH;IAEHI;EAFG,CAAP;AAIH,CALM;AAMP,OAAO,MAAMG,QAAQ,GAAIH,OAAD,IAAa;EACjC,OAAO;IACHC,IAAI,EAAEJ,SADH;IAEHG;EAFG,CAAP;AAIH,CALM;AAMP,OAAO,MAAMI,SAAS,GAAIJ,OAAD,IAAa;EAClC,OAAO;IACHC,IAAI,EAAEH,UADH;IAEHE;EAFG,CAAP;AAIH,CALM,C,CAQP;;AACA,MAAMK,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IACIC,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,aAFX;IAGIC,OAAO,EAAG;AACtB;AACA,aALQ;IAMIC,MAAM,EAAE;EANZ,CADG,EASH;IACIH,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,iBAFX;IAGIC,OAAO,EAAE,qFAHb;IAIIC,MAAM,EAAE;EAJZ,CATG,EAeH;IACIH,EAAE,EAAE,CADR;IAEIC,KAAK,EAAE,UAFX;IAGIC,OAAO,EAAE,iEAHb;IAIIC,MAAM,EAAE;EAJZ,CAfG;AADU,CAArB,C,CAyBA;;AACA,MAAMJ,KAAK,GAAG,YAAkC;EAAA,IAAjCK,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EAC5C,QAAQA,MAAM,CAACX,IAAf;IACI;IACA,KAAKN,WAAL;MAAmB;MACf,OAAO;QACH;QACA;QACAW,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACZ,OAAxB;MAHJ,CAAP;;IAKJ,KAAKJ,WAAL;MACI,OAAO;QACH;QACAU,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAWA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACZ,OAAjD;MAFJ,CAAP;;IAIJ,KAAKH,SAAL;MACI,OAAO;QACH;QACAS,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYS,GAAZ,CAAiBD,IAAD,IAAU;UAC7B,IAAIA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACZ,OAAvB,EAAgC;YAC5B,OAAO,EACH,GAAGc,IADA;cACMJ,MAAM,EAAE,CAACI,IAAI,CAACJ;YADpB,CAAP;UAGH,CAJD,MAIO;YACH,OAAOI,IAAP;UACH;QACJ,CARM;MAFJ,CAAP;;IAYJ,KAAKhB,UAAL;MACIkB,OAAO,CAACC,GAAR,CAAY,sCAAZ;MACA,OAAOZ,YAAP;;IACJ;MACI,OAAOM,KAAP;EA9BR;AAgCH,CAjCD,C,CAmCA;;;AACA,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}